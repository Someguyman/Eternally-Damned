
class MM_InvulnerabilitySphere : InvulnerabilitySphere
{
	Default
	{
		+CASTSPRITESHADOW
		+FLOATBOB
		+ZDOOMTRANS
		-COUNTITEM
		Inventory.PickupSound "Powerup/pickup5";
		Inventory.PickupMessage "\cfInvulnerability!";
		Powerup.Colormap 0.243, 0.0, 0.639, 1.5, 0.75, 0.0;
		RenderStyle "Translucent";
		Alpha 0.8;
	}
	States
	{
		Spawn:
			INVP ABCDCB 6 Bright;
			Loop;
	}
}

class MM_InvulnerabilitySpherePickUp : CustomInventory
{
	Default
	{
		+CASTSPRITESHADOW
		+FLOATBOB
		+ZDOOMTRANS
		-COUNTITEM
		Inventory.PickupSound "Powerup/pickup5";
		Inventory.PickupMessage "\cfInvulnerability!";
		//Powerup.Colormap 0.243, 0.0, 0.639, 1.5, 0.75, 0.0;
		RenderStyle "Translucent";
		Alpha 0.8;
	}
	States
	{
		Spawn:
			INVP ABCDCB 6 Bright;
			Loop;
		Pickup:
			TNT1 A 0 A_JumpIf(CountInv("MM_InvulnerabilityTimer") > 0, "PickupFail");
			TNT1 A 0 A_GiveInventory("MM_InvulnerabilitySphere", 1);
			TNT1 A 0 A_GiveInventory("MM_InvulnerabilityTimer", 1);
			Stop;
		PickupFail:
			TNT1 A 0;
			Fail;
	}
}

class MM_InvulnerabilityTimer: Powerup
{
	Default
	{
	Powerup.Duration -25;
	}
}

class MM_Soulsphere : CustomInventory Replaces Soulsphere
{
	Default
	{
		Tag "Soulsphere";
		+CASTSPRITESHADOW
		+FLOATBOB
		+ZDOOMTRANS
		-COUNTITEM
		RenderStyle "Translucent";
		Inventory.PickupMessage "\cnSoulsphere!";
		Inventory.PickupSound "Powerup/pickup1";
		Alpha 0.8;
	}
	States
	{
	Spawn:
		SOLS ABCDCB 6 Bright;
		Loop;
	Pickup:
		TNT1 A 0 A_JumpIf(health >= 200, "PickupFail");
		TNT1 A 0 A_GiveInventory("MM_Soulspherehealth", 1);
		stop;
	PickupFail:
		TNT1 A 0;
		Fail;
	}
}

class MM_Soulspherehealth : Health
{
	Default
	{
		Inventory.Amount 100;
		Inventory.MaxAmount 200;
	}
}

class MM_Megasphere : CustomInventory
{
	Default
	{
		+CASTSPRITESHADOW
		+FLOATBOB
		+ZDOOMTRANS
		-COUNTITEM
		RenderStyle "Translucent";
		Inventory.PickupMessage "\cfMegasphere!";
		Inventory.PickupSound "Powerup/pickup8";
		Alpha 0.8;
	}
	States
	{
	Spawn:
		MEGS ABCDB 6 BRIGHT;
		Loop;
	ArmorCheck:
		TNT1 A 0 A_JumpIfInventory("BasicArmor", 200, "PickupFail");
		Goto PickupSuccess;
	Pickup:
		TNT1 A 0 A_JumpIf(health >= 200, "ArmorCheck");
		goto PickupSuccess;
	PickupSuccess:
		TNT1 A 0 A_GiveInventory("BlueArmorForMegasphere", 1);
		TNT1 A 0 A_GiveInventory("MegasphereHealth", 1);
		Stop;
	PickupFail:
		TNT1 A 0;
		Fail;
	}
}

Class MM_Megasphere_spawner : Actor
{
	Default
	{
		+Noblockmap
		-COUNTKILL 
	}
	States
	{
	Spawn:
		BNOH A 0;
		BNOH A 0 A_JumpIf(CallACS("Gamespawntoggle")==12.0, "KDIKDIZDSpawn");
		Goto Normalspawn;
	Normalspawn:
		TNT1 A 0 A_NoBlocking;
        TNT1 A 0 {bCOUNTKILL = 0; }
        TNT1 A 0 {bTHRUACTORS = 1; }
		TNT1 A 0 A_SpawnItemEx("MM_Megasphere",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION | SXF_TRANSFERAMBUSHFLAG ,0);
		Stop;
	KDIKDIZDSpawn:
		TNT1 A 0 A_NoBlocking;
		TNT1 A 0 A_SpawnItemEx("MM_KDIKDIZD_Bomb",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION | SXF_TRANSFERAMBUSHFLAG ,0);
		Stop;	
	}
}

class MM_Supersphere : MM_Megasphere
{
	Default
	{
		Inventory.PickupMessage "\coSupersphere!";
	}
	States
	{
	Spawn:
		SUPS ABCD 6 BRIGHT;
		Loop;
	ArmorCheck:
		TNT1 A 0 A_JumpIfInventory("BasicArmor", 200, "PickupFail");
		Goto PickupSuccess;
	Pickup:
		TNT1 A 0 A_JumpIf(health >= 200, "ArmorCheck");
		goto PickupSuccess;
	PickupSuccess:
		TNT1 A 0 A_GiveInventory("MM_SupersphereHealth", 1);
		TNT1 A 0 A_GiveInventory("MM_BlueArmorForSupersphere", 1);
		Stop;
	PickupFail:
		TNT1 A 0;
		Fail;
	}
}

Class MM_KDIKDIZD_Bomb : actor
{
	Default
	{
		+shootable
		+Solid
		+Noblood
		Health 60;
		Radius 1;
		Height 64;
		Mass 1000000;
		PainSound "misc/chat2";
		DeathSound "weapons/rocklx";
		
	}
	States
	{
		Spawn:
			TNT1 A 10;
			Loop;			
		Death:
			BOMX A 1;
			BOMX A 37 Bright A_Pain;
			BOMX A 38 Bright A_Pain;
			BOMX A 38 Bright A_Pain;
			BOMX A 0 A_Scream;
			BOMX A 8 Bright A_Explode;
			BOMX B 8 Bright;
			BOMX C 8 Bright;
			Stop;
	}
}

class mm_SupersphereHealth : Health
{
	Default
	{
		Inventory.Amount 100;
		Inventory.MaxAmount 200;
		+INVENTORY.ALWAYSPICKUP
	}
}

class MM_BlueArmorForSupersphere : BasicArmorBonus
{
	Default
	{
		Armor.SavePercent 50;
		Armor.Saveamount 100;
		Armor.Maxsaveamount 200;
		+INVENTORY.ALWAYSPICKUP
	}
}

class MM_BlurSphere : BlurSphere
{
	Default
	{
		Powerup.Type "MM_PowerInvisibility";
	}
}

class MM_BlurSpherePickup : Custominventory
{
	Default
	{
		+CASTSPRITESHADOW
		+FLOATBOB
		+ZDOOMTRANS
		-VISIBILITYPULSE
		-COUNTITEM
		RenderStyle "Translucent";
		Inventory.PickupMessage "\cxPartial Invisibility!";
		Inventory.PickupSound "Powerup/pickup9";
		Alpha 0.8;
	}
	States
	{
		Spawn:
			PINS ABCDCE 6 Bright A_JumpIf(CallACS("Invistoggle")==1, "OriginalSpawn");
			Loop;
		OriginalSpawn:
			PIV2 ABCDCE 6 Bright A_JumpIf(CallACS("Invistoggle")==0, "Spawn");
			Loop;
		Pickup:
			TNT1 A 0 A_JumpIf(CountInv("MM_BlurSphereTimer") > 0, "PickupFail");
			TNT1 A 0 A_GiveInventory("MM_BlurSphere", 1);
			TNT1 A 0 A_GiveInventory("MM_BlurSphereTimer", 1);
			Stop;
		PickupFail:
			TNT1 A 0;
			Fail;
	}
}

class MM_BlurSphereTimer : Powerup
{
	Default
	{
	Powerup.Duration -55;
	}
}

class MM_PowerInvisibility : PowerInvisibility Replaces PowerInvisibility
{
	Default
	{
	Powerup.Mode "Translucent";
	}
}

class MM_BerserkSphere : Custominventory Replaces Berserk
{
	Default
	{
		+CASTSPRITESHADOW
		+ZDOOMTRANS
		Tag "Berserk";
		Inventory.PickupSound "Powerup/pickup3";
		Inventory.PickupMessage "\cgBerserk!";
		Alpha 0.8;
		-COUNTITEM
	}
	States
	{
	Spawn:
		PWR1 A 0 A_SetRenderStyle(0.8, STYLE_Translucent);
		PWR1 A 0 A_FadeTo (0.8, 0.1667, false);
		PWR1 A 0 {bFLOATBOB = True;}
		PWR1 ABCD 6 Bright A_JumpIf(CallACS("Berserktoggle")==1, "OriginalSpawn");
		PWR1 A 0 Bright A_JumpIf(CallACS("Berserktoggle")==1, "OriginalSpawn");
		Goto spawn+2;
	OriginalSpawn:
		PSTR A 0 A_SetRenderStyle(1.0, STYLE_Normal);
		PSTR A 0 A_FadeTo (1.0, 0.1667, false);
		PSTR A 0 {bFLOATBOB = False;}
		PSTR A 0 A_JumpIf(CallACS("Berserktoggle")==0, "Spawn");
		PSTR A 1 Bright;
		Goto Originalspawn+2;
	Healthcheck:
		TNT1 A 0 A_JumpIf(CountInv("PowerStrength") > 0, "PickupFail");
		//TNT1 A 0 A_JumpIf(CountInv("MM_BerserkTimer") > 0, "PickupFail");
		Goto PickupSuccess;
	Pickup:
		TNT1 A 0 A_JumpIf(health >= 100, "Healthcheck");
		Goto PickupSuccess;
	PickupSuccess:
		TNT1 A 0 A_GiveInventory("PowerStrength");
		//TNT1 A 0 A_GiveInventory("MM_BerserkTimer");
		TNT1 A 0 HealThing(100, 0);
		TNT1 A 0 A_SelectWeapon("Fist");
		stop;
	PickupFail:
		TNT1 A 0;
		Fail;
	}
}

class MM_KDIKDIZD_Berserk : MM_BerserkSphere
{
		Default
		{
			+SHOOTABLE
			+NOBLOOD
			Radius 20;
			Height 16;
			mass 100;
		}

}

class MM_RadSuit : Custominventory Replaces Radsuit
{
	Default
	{
		+CASTSPRITESHADOW
		//FloatBobStrength 0.5;
		Inventory.PickupSound "Powerup/pickup6";
		Inventory.PickupMessage "\cpRadiation Protection";
		+ZDOOMTRANS
	}
	States
	{
	Spawn:
		PWR1 A 0 A_SetRenderStyle(1.0, STYLE_Normal);
		PWR1 A 0 A_FadeTo (1.0, 0.1667, false);
		PWR1 A 0 {bFLOATBOB = False;}
		PSTR A 0 Bright A_JumpIf(CallACS("Haztoggle")==1, "AltSpawn");
		SUIT A 1 Bright;
		Goto spawn+2;
	AltSpawn:
		PWR1 A 0 A_SetRenderStyle(0.8, STYLE_Translucent);
		PWR1 A 0 A_FadeTo (0.8, 0.1667, false);
		PWR1 A 0 {bFLOATBOB = True;}
		//PSTR A 0 Bright A_JumpIf(CallACS("Haztoggle")==0, "Spawn");
		RADP ABCB 6 Bright A_JumpIf(CallACS("Haztoggle")==0, "Spawn");
		Goto spawn+2;
	Pickup:
		TNT1 A 0 A_JumpIf(CountInv("MM_RadsuitTimer") > 0, "PickupFail");
		TNT1 A 0 A_GiveInventory("Radsuit", 1);
		TNT1 A 0 A_GiveInventory("MM_RadsuitTimer", 1);
		Stop;
	PickupFail:
		TNT1 A 0;
		Fail;
	}
}

Class MM_RadsuitTimer : Powerup
{
	Default
	{
		Powerup.Duration -55;
	}
}

class MM_Lightamp : Custominventory
{
	Default
	{
		-COUNTITEM
		+CASTSPRITESHADOW
		Inventory.PickupSound "Powerup/pickup2";
		Inventory.PickupMessage "\cqLight Amplification";
	}
	States
	{
		Spawn:
			PVIS C 6;
			PVIS B 3 Bright;
			PVIS A 6 Bright;
			PVIS B 3;
			PVIS C 6;
			Loop;
		Pickup:
			TNT1 A 0 A_JumpIf(CountInv("MM_LightampTimer") > 0, "PickupFail");
			TNT1 A 0 A_GiveInventory("Infrared", 1);
			TNT1 A 0 A_GiveInventory("MM_LightampTimer", 1);
			Stop;
		PickupFail:
			TNT1 A 0;
			Fail;
	}
}

Class MM_LightampTimer : Powerup
{
	Default
	{
		Powerup.Duration -115;
	}
}

Class MM_Lightampspawner : Actor
{
	Default
	{
		+Noblockmap
		-COUNTKILL 
	}
	States
	{
	Spawn:
		BNOH A 0;
		BNOH A 0 A_JumpIf(CallACS("Gamespawntoggle")==6, "Valiantspawn");
		BNOH A 0 A_JumpIf(CallACS("Gamespawntoggle")==12.0, "KDIKDIZDSpawn");
		Goto Normalspawn;
	Normalspawn:
		TNT1 A 0 A_NoBlocking;
        TNT1 A 0 {bCOUNTKILL = 0; }
        TNT1 A 0 {bTHRUACTORS = 1; }
		TNT1 A 0 A_SpawnItemEx("MM_Lightamp",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION | SXF_TRANSFERAMBUSHFLAG ,0);
		Stop;
	Valiantspawn:
		TNT1 A 0 A_NoBlocking;
		TNT1 A 0 A_SpawnItemEx("MM_Spidermastermind",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION | SXF_TRANSFERAMBUSHFLAG ,0);
		Stop;
	KDIKDIZDSpawn:
		TNT1 A 0 A_NoBlocking;
		TNT1 A 0 A_SpawnItemEx("MM_KDIKDIZD_Berserk",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION | SXF_TRANSFERAMBUSHFLAG ,0);
		Stop;	
	}
}

class MM_Computerareamap : CustomInventory replaces Allmap
{
	Default
	{
		+CASTSPRITESHADOW
		-COUNTITEM
		Inventory.PickupSound "Powerup/pickup7";
		Inventory.PickupMessage "\cdComputer Area Map";
	}
	States
	{
	Spawn:
		ATOM ABCDCB 6 Bright A_JumpIf(CallACS("Gamespawntoggle")==12.0, "KDIKDIZDSpawn");
		Loop;
	KDIKDIZDSpawn:
		RMAP ABCDCB 6 Bright;
		Goto spawn;
	Pickup:
		TNT1 A 0 A_JumpIf(CountInv("MM_Allmapchecker") > 0, "PickupFail");
		TNT1 A 0 A_GiveInventory("Allmap", 1);
		TNT1 A 0 A_GiveInventory("MM_Allmapchecker", 1);	
		Stop;
	PickupFail:
		TNT1 A 0;
		Fail;
	}
}

class MM_Allmapchecker: Powerup
{
	Default
	{
		Powerup.Duration 0x7FFFFFFF;
	}
}	

Class PowerQuadDamage : PowerDamage
{
	Default
	{
		Damagefactor "normal", 4;
		Powerup.Duration -30;
		Powerup.Color "D8 83 ff", 0.5;
	}
}

class MM_Onslaught: CustomInventory
{
	Default
	{
		-COUNTITEM
		+FLOATBOB
		+ZDOOMTRANS
		+INVENTORY.AUTOACTIVATE
		+INVENTORY.ALWAYSPICKUP
		+INVENTORY.BIGPOWERUP
		+CASTSPRITESHADOW
		Inventory.MaxAmount 0;
		Inventory.PickupMessage "\ctOnslaught!";
		Inventory.PickupSound "Powerup/pickup4";
		RenderStyle "Translucent";
		Alpha 0.8;
	}
	States
	{
	Spawn:
		PWR2 ABCD 6 Bright;
		Loop;
	Pickup:
		TNT1 A 0 A_GiveInventory("Powerquaddamage");
		TNT1 A 0 A_GiveInventory("BlueArmorForMegasphere", 1);
		TNT1 A 0 A_GiveInventory("MegasphereHealth", 1);
		Stop;
	}
}

Class MM_OnslaughtPickup : CustomInventory
{
	Default
	{
		-COUNTITEM
		+FLOATBOB
		+ZDOOMTRANS
		+CASTSPRITESHADOW
		Inventory.PickupMessage "\ctOnslaught!";
		Inventory.PickupSound "Powerup/pickup4";
		RenderStyle "Translucent";
		Alpha 0.8;
	}
	States
	{
	Spawn:
		PWR2 ABCD 6 Bright;
		Loop;
	Pickup:
		TNT1 A 0 A_JumpIf(CountInv("MM_OnslaughtTimer") > 0, "PickupFail");
		goto PickupSuccess;
	PickupSuccess:
		TNT1 A 0 A_GiveInventory("MM_OnslaughtTimer", 1);
		TNT1 A 0 A_GiveInventory("MM_Onslaught");
		Stop;
	PickupFail:
		TNT1 A 0;
		Fail;
	}
}

class MM_OnslaughtTimer: Powerup
{
	Default
	{
		Powerup.Duration -25;
	}
}	